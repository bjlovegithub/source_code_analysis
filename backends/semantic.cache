;; Object backends/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "backends/"
  :tables (list 
   (semanticdb-table "dbfactory.cc"
    :major-mode 'c++-mode
    :tags '(("config.h" include (:system-flag t) nil [910 929]) ("xapian/dbfactory.h" include nil nil [931 960]) ("xapian/database.h" include nil nil [962 990]) ("xapian/error.h" include nil nil [991 1016]) ("xapian/version.h" include nil nil [1017 1044]) ("debuglog.h" include nil nil [1077 1098]) ("fileutils.h" include nil nil [1099 1121]) ("str.h" include nil nil [1122 1138]) ("utils.h" include nil nil [1139 1157]) ("safeerrno.h" include nil nil [1159 1181]) ("omdebug.h" include nil nil [1183 1203]) ("fstream" include (:system-flag t) nil [1511 1529]) ("string" include (:system-flag t) nil [1530 1547]) ("Xapian" type (:members (("open_stub" function (:typemodifiers ("static") :arguments (("db" variable (:type ("Database" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3157 3170]) ("file" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3171 3190])) :type "void") (reparse-symbol namespacesubparts) [3135 6276]) ("open_stub" function (:typemodifiers ("static") :arguments (("db" variable (:type ("WritableDatabase" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6300 6321]) ("file" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6322 6341]) ("action" variable (:type "int") (reparse-symbol arg-sub-list) [6342 6353])) :type "void") (reparse-symbol namespacesubparts) [6278 9183]) ("open_stub" function (:parent "Auto" :arguments (("file" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9210 9229])) :type ("Database" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [9185 9351]) ("open_stub" function (:parent "Auto" :arguments (("file" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9386 9405]) ("action" variable (:type "int") (reparse-symbol arg-sub-list) [9406 9417])) :type ("WritableDatabase" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [9353 9581]) ("Database" function (:constructor-flag t :parent "Database" :arguments (("path" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9602 9621])) :type ("Database" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [9583 10758]) ("HAVE_DISK_BACKEND" variable (:constant-flag t :default-value (nil)) (reparse-symbol namespacesubparts) [10889 10986]) ("Database" function (:type "int") (reparse-symbol namespacesubparts) [10993 13766])) :type "namespace") nil [1571 13769]))
    :file "dbfactory.cc"
    :pointmax 13770
    :unmatched-syntax '((thing 10991 . 10992))
    )
   (semanticdb-table "database.cc"
    :major-mode 'c++-mode
    :tags '(("config.h" include (:system-flag t) nil [954 973]) ("database.h" include nil nil [975 996]) ("xapian/error.h" include nil nil [998 1023]) ("leafpostlist.h" include nil nil [1025 1050]) ("omassert.h" include nil nil [1051 1072]) ("slowvaluelist.h" include nil nil [1073 1099]) ("algorithm" include (:system-flag t) nil [1101 1121]) ("string" include (:system-flag t) nil [1122 1139]) ("Xapian" type (:members (("Internal" function (:destructor-flag t :parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [1183 1218]) ("keep_alive" function (:parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [1220 1334]) ("get_value_freq" function (:parent "Database::Internal" :arguments (("" variable (:type ("Xapian::valueno" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1389 1405])) :type ("Xapian::doccount" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1337 1500]) ("get_value_lower_bound" function (:parent "Database::Internal" :arguments (("" variable (:type ("Xapian::valueno" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1551 1567])) :type ("string" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1502 1598]) ("get_value_upper_bound" function (:parent "Database::Internal" :arguments (("" variable (:type ("Xapian::valueno" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1649 1665])) :type ("string" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1600 1767]) ("get_doclength_lower_bound" function (:parent "Database::Internal" :type ("Xapian::termcount" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1769 1986]) ("get_doclength_upper_bound" function (:parent "Database::Internal" :type ("Xapian::termcount" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1988 2254]) ("get_wdf_upper_bound" function (:parent "Database::Internal" :arguments (("term" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2314 2334])) :type ("Xapian::termcount" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2256 2504]) ("dtor_called" function (:parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [2616 2951]) ("commit" function (:parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [2953 3064]) ("cancel" function (:parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [3066 3177]) ("begin_transaction" function (:parent "Database::Internal" :arguments (("flushed" variable (:type "bool") (reparse-symbol arg-sub-list) [3222 3235])) :type "void") (reparse-symbol namespacesubparts) [3179 3771]) ("commit_transaction" function (:parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [3773 4348]) ("cancel_transaction" function (:parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [4350 4731]) ("add_document" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("Xapian::Document" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4780 4805])) :type ("Xapian::docid" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [4733 4897]) ("delete_document" function (:parent "Database::Internal" :arguments (("" variable (:type ("Xapian::docid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4940 4954])) :type "void") (reparse-symbol namespacesubparts) [4899 5032]) ("delete_document" function (:parent "Database::Internal" :arguments (("unique_term" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5075 5102])) :type "void") (reparse-symbol namespacesubparts) [5034 5330]) ("replace_document" function (:parent "Database::Internal" :arguments (("" variable (:type ("Xapian::docid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5374 5388]) ("" variable (:constant-flag t :type ("Xapian::Document" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5389 5414])) :type "void") (reparse-symbol namespacesubparts) [5332 5492]) ("replace_document" function (:parent "Database::Internal" :arguments (("unique_term" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5545 5572]) ("document" variable (:constant-flag t :type ("Xapian::Document" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5582 5616])) :type ("Xapian::docid" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [5494 6016]) ("open_value_list" function (:pointer 1 :parent "Database::Internal" :arguments (("slot" variable (:type ("Xapian::valueno" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6066 6087])) :type ("ValueList" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [6018 6190]) ("open_spelling_termlist" function (:pointer 1 :parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6246 6261])) :type ("TermList" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [6192 6467]) ("open_spelling_wordlist" function (:pointer 1 :parent "Database::Internal" :type ("TermList" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [6469 6730]) ("get_spelling_frequency" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6792 6807])) :type ("Xapian::doccount" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [6732 7010]) ("add_spelling" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7050 7065]) ("" variable (:type ("Xapian::termcount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7066 7084])) :type "void") (reparse-symbol namespacesubparts) [7012 7186]) ("remove_spelling" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7229 7244]) ("" variable (:type ("Xapian::termcount" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7245 7263])) :type "void") (reparse-symbol namespacesubparts) [7188 7365]) ("open_synonym_termlist" function (:pointer 1 :parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7420 7435])) :type ("TermList" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [7367 7628]) ("open_synonym_keylist" function (:pointer 1 :parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7682 7697])) :type ("TermList" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [7630 7890]) ("add_synonym" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7929 7944]) ("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7945 7960])) :type "void") (reparse-symbol namespacesubparts) [7892 8051]) ("remove_synonym" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8093 8108]) ("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8109 8124])) :type "void") (reparse-symbol namespacesubparts) [8053 8215]) ("clear_synonyms" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8257 8272])) :type "void") (reparse-symbol namespacesubparts) [8217 8363]) ("get_metadata" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8405 8420])) :type ("string" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [8365 8451]) ("open_metadata_keylist" function (:pointer 1 :parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8506 8521])) :type ("TermList" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [8453 8664]) ("set_metadata" function (:parent "Database::Internal" :arguments (("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8704 8719]) ("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8720 8735])) :type "void") (reparse-symbol namespacesubparts) [8666 8820]) ("reopen" function (:parent "Database::Internal" :type "void") (reparse-symbol namespacesubparts) [8822 8984]) ("request_document" function (:parent "Database::Internal" :arguments (("" variable (:type ("Xapian::docid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9028 9050])) :type "void") (reparse-symbol namespacesubparts) [8986 9060]) ("collect_document" function (:pointer 1 :parent "Database::Internal" :arguments (("did" variable (:type ("Xapian::docid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9128 9146])) :type ("Xapian::Document::Internal" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [9062 9373]) ("write_changesets_to_fd" function (:parent "Database::Internal" :arguments (("" variable (:type "int") (reparse-symbol arg-sub-list) [9423 9427]) ("" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9428 9443]) ("" variable (:type "bool") (reparse-symbol arg-sub-list) [9444 9449]) ("" variable (:pointer 1 :type ("ReplicationInfo" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9450 9468])) :type "void") (reparse-symbol namespacesubparts) [9375 9553]) ("get_revision_info" function (:parent "Database::Internal" :type ("string" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [9555 9712]) ("get_uuid" function (:parent "Database::Internal" :type ("string" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [9714 9782]) ("invalidate_doc_object" function (:parent "Database::Internal" :arguments (("" variable (:pointer 1 :type ("Xapian::Document::Internal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9831 9860])) :type "void") (reparse-symbol namespacesubparts) [9784 9901]) ("as_remotedatabase" function (:pointer 1 :parent "Database::Internal" :type ("RemoteDatabase" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [9903 9980])) :type "namespace") nil [1163 9983]))
    :file "database.cc"
    :pointmax 9984
    :unmatched-syntax 'nil
    )
   (semanticdb-table "databasereplicator.cc"
    :major-mode 'c++-mode
    :tags '(("config.h" include (:system-flag t) nil [879 898]) ("databasereplicator.h" include nil nil [900 931]) ("xapian/error.h" include nil nil [933 958]) ("xapian/version.h" include nil nil [959 986]) ("omdebug.h" include nil nil [1019 1039]) ("utils.h" include nil nil [1040 1058]) ("Xapian" type (:members (("DatabaseReplicator" function (:destructor-flag t :parent "DatabaseReplicator" :type "void") (reparse-symbol namespacesubparts) [1355 1400]) ("open" function (:pointer 1 :parent "DatabaseReplicator" :arguments (("path" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1448 1468])) :type ("DatabaseReplicator" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1402 2026])) :type "namespace") nil [1335 2029]))
    :file "databasereplicator.cc"
    :pointmax 2030
    :unmatched-syntax 'nil
    )
   (semanticdb-table "dbfactory_remote.cc"
    :major-mode 'c++-mode
    :tags '(("config.h" include (:system-flag t) nil [834 853]) ("xapian/dbfactory.h" include (:system-flag t) nil [855 884]) ("progclient.h" include nil nil [886 909]) ("remotetcpclient.h" include nil nil [910 938]) ("string" include (:system-flag t) nil [940 957]) ("Xapian" type (:members (("open" function (:parent "Remote" :arguments (("host" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1023 1042]) ("port" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1043 1061]) ("timeout" variable (:type ("Xapian::timeout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1062 1086]) ("connect_timeout" variable (:type ("Xapian::timeout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1093 1125])) :type ("Database" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1001 1336]) ("open_writable" function (:parent "Remote" :arguments (("host" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1377 1396]) ("port" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1397 1415]) ("timeout" variable (:type ("Xapian::timeout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1424 1448]) ("connect_timeout" variable (:type ("Xapian::timeout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1449 1481])) :type ("WritableDatabase" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1338 1716]) ("open" function (:parent "Remote" :arguments (("program" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1740 1762]) ("args" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1763 1782]) ("timeout" variable (:type ("Xapian::timeout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1783 1807])) :type ("Database" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1718 1975]) ("open_writable" function (:parent "Remote" :arguments (("program" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2016 2038]) ("args" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2039 2058]) ("timeout" variable (:type ("Xapian::timeout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2067 2091])) :type ("WritableDatabase" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [1977 2283])) :type "namespace") nil [981 2286]))
    :file "dbfactory_remote.cc"
    :pointmax 2287
    :unmatched-syntax 'nil
    )
   (semanticdb-table "flint_lock.cc"
    :major-mode 'c++-mode
    :tags '(("config.h" include (:system-flag t) nil [850 869]) ("flint_lock.h" include nil nil [871 894]) ("safeerrno.h" include nil nil [914 936]) ("safefcntl.h" include nil nil [938 960]) ("unistd.h" include (:system-flag t) nil [961 980]) ("cstdlib" include (:system-flag t) nil [981 999]) ("sys/types.h" include (:system-flag t) nil [1000 1022]) ("sys/socket.h" include (:system-flag t) nil [1023 1046]) ("sys/wait.h" include (:system-flag t) nil [1047 1068]) ("signal.h" include (:system-flag t) nil [1069 1088]) ("cstring" include (:system-flag t) nil [1089 1107]) ("omassert.h" include nil nil [1116 1137]) ("xapian/error.h" include nil nil [1189 1214]) ("lock" function (:parent "FlintLock" :arguments (("exclusive" variable (:type "bool") (reparse-symbol arg-sub-list) [1272 1287]) ("explanation" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1288 1309])) :type ("FlintLock::reason" type (:type "class") nil nil)) nil [1238 6989]) ("release" function (:parent "FlintLock" :type "void") nil [6991 7741]) ("throw_databaselockerror" function (:parent "FlintLock" :arguments (("why" variable (:type ("FlintLock::reason" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7783 7805]) ("db_dir" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7813 7835]) ("explanation" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7843 7870])) :type "void") nil [7743 8335]))
    :file "flint_lock.cc"
    :pointmax 8336
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
